const caminhoJson = "data/unidades.json"; var dadosJson = "", arrayCoeficientes = [], casasDecimais = 3, checkComum = !1, checkSi = ""; const idCategoria = "selecao-categoria", idTipo = "selecao-tipo", idUnidade = "selecao-unidade", idUnidade2 = "selecao-unidade-2", idTextUnidade = "text-unidade", idTextUnidade2 = "text-unidade-2", idRangeDecimais = "range-decimais", idTextDecimais = "text-decimais", objSelectCategoria = document.getElementById(idCategoria), objSelectTipo = document.getElementById(idTipo), objSelectUnidade = document.getElementById(idUnidade), objSelectUnidade2 = document.getElementById(idUnidade2), objTextUnidade = document.getElementById(idTextUnidade), objTextUnidade2 = document.getElementById(idTextUnidade2), objRangeDecimais = document.getElementById(idRangeDecimais), objTextDecimais = document.getElementById(idTextDecimais); async function extraiJson(e) { return await fetch(e).then((e => e.json())).then((e => { try { return e } catch (e) { return console.error("Erro ao processar o JSON: " + e), [] } })).catch((e => alert("Erro ao acessar a base de dados " + e))) } async function funcaoPrincipal() { dadosJson = await extraiJson(caminhoJson) } function verifica() { setTimeout((() => { "" === dadosJson ? verifica() : extraiCategoria(idCategoria) }), "200") } function extraiCategoria(e) { try { let a = dadosJson, i = []; for (let e in a) a[e].categoria && i.push(a[e].categoria); insereDadosCombobox(removerElementosRepetidos(i), e), extraiTipo(idTipo) } catch (e) { return alert("Erro ao acessar a base de dados. " + e), [] } } function removerElementosRepetidos(e) { const a = {}, i = []; for (const t of e) a[t] || (a[t] = !0, i.push(t)); return i } function limpaCombobox(e) { document.getElementById(e).innerHTML = "" } function insereDadosCombobox(e, a) { const i = document.getElementById(a); for (let a in e) { const t = document.createElement("option"); t.text = e[a], i.add(t) } } function extraiTipo(e) { try { let a = [], i = dadosJson, t = objSelectCategoria.value; for (let e in i) i[e].categoria === t && a.push(i[e].tipo); limpaCombobox(e), insereDadosCombobox(removerElementosRepetidos(a), e), extraiUnidade(idUnidade) } catch (e) { return alert("Erro ao acessar a base de dados " + e), [] } } function extraiUnidade(e) { try { let a = dadosJson, i = []; arrayCoeficientes = []; let t = objSelectTipo.value; if (!1 === checkComum) if ("" === checkSi) for (let e in a) a[e].tipo === t && (i.push(a[e].nick), arrayCoeficientes.push(a[e].coeficiente)); else for (let e in a) a[e].tipo === t && a[e].sistema === checkSi && (i.push(a[e].nick), arrayCoeficientes.push(a[e].coeficiente)); else if ("" === checkSi) for (let e in a) a[e].tipo === t && a[e].frequente === checkComum && (i.push(a[e].nick), arrayCoeficientes.push(a[e].coeficiente)); else for (let e in a) a[e].tipo === t && a[e].sistema === checkSi && a[e].frequente === checkComum && (i.push(a[e].nick), arrayCoeficientes.push(a[e].coeficiente)); limpaCombobox(e), insereDadosCombobox(removerElementosRepetidos(i), e), limpaCombobox(e + "-2"), insereDadosCombobox(removerElementosRepetidos(i), e + "-2"), calcula() } catch (e) { return alert("Erro ao acessar a base de dados. (Extrai unidades)" + e), [] } } function calcula() { if ("" === objTextUnidade.value) return void (objTextUnidade2.value = ""); let e = objSelectUnidade.selectedIndex, a = objSelectUnidade2.selectedIndex; if (-1 === e && (e = 0), -1 === a && (a = 0), "Temperatura" === objSelectCategoria.value) calculaTemperatura(e, a); else { let i = arrayCoeficientes[e] / arrayCoeficientes[a]; objTextUnidade2.value = Math.round(Number(objTextUnidade.value) * i * 10 ** casasDecimais) / 10 ** casasDecimais } ajustaTexto() } function calculaTemperatura(e, a) { 0 === e && 1 === a && (objTextUnidade2.value = Math.round((Number(objTextUnidade.value) - 273.15) * 10 ** casasDecimais) / 10 ** casasDecimais), 1 === e && 0 === a && (objTextUnidade2.value = Math.round((Number(objTextUnidade.value) + 273.15) * 10 ** casasDecimais) / 10 ** casasDecimais), 0 === e && 2 === a && (objTextUnidade2.value = Math.round((1.8 * Number(objTextUnidade.value) - 459.67) * 10 ** casasDecimais) / 10 ** casasDecimais), 2 === e && 0 === a && (objTextUnidade2.value = Math.round((Number(objTextUnidade.value) + 459.67) / 1.8 * 10 ** casasDecimais) / 10 ** casasDecimais), 1 === e && 2 === a && (objTextUnidade2.value = Math.round((Number(objTextUnidade.value) / 5 * 9 + 32) * 10 ** casasDecimais) / 10 ** casasDecimais), 2 === e && 1 === a && (objTextUnidade2.value = Math.round(5 * (Number(objTextUnidade.value) - 32) / 9 * 10 ** casasDecimais) / 10 ** casasDecimais), e === a && (objTextUnidade2.value = objTextUnidade.value) } function decimais() { objTextDecimais.innerHTML = objRangeDecimais.value + " casas decimais", casasDecimais = Number(objRangeDecimais.value), calcula() } function unidadesComuns() { !0 === checkComum ? (checkComum = !1, extraiUnidade(idUnidade)) : (checkComum = !0, extraiUnidade(idUnidade)) } function sistemaSi() { "" === checkSi ? (checkSi = "SI", extraiUnidade(idUnidade)) : (checkSi = "", extraiUnidade(idUnidade)) } function trocaUnidades() { let e = objSelectUnidade.selectedIndex; objSelectUnidade.selectedIndex = objSelectUnidade2.selectedIndex, objSelectUnidade2.selectedIndex = e, calcula() } function ajustaTexto() { objTextUnidade.value.length > 8 && objTextUnidade.value.length <= 11 ? objTextUnidade.style.fontSize = "1.5rem" : objTextUnidade.value.length > 11 ? objTextUnidade.style.fontSize = "1rem" : objTextUnidade.style.fontSize = "2rem", objTextUnidade2.value.length > 8 && objTextUnidade2.value.length <= 11 ? objTextUnidade2.style.fontSize = "1.5rem" : objTextUnidade2.value.length > 11 ? objTextUnidade2.style.fontSize = "1rem" : objTextUnidade2.style.fontSize = "2rem" } objTextUnidade.addEventListener("input", (() => { calcula() })), funcaoPrincipal(), verifica(), decimais();